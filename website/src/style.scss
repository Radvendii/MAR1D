// colour palette: https://coolors.co/6b88ff-c84c0c-fc9838-dae2df-423e3b
$blue: #6b88ff;
$brown: #c84c0c;
$pink: #fcbcb0;
$lightblue: #dae2df;
$gray: #423e3b;
$text: black;

@mixin plain-link {
  text-decoration: none;
  color: inherit;
}

@font-face {
  font-family: "Emulogic";
  src: url(/static/Emulogic.ttf);
}

@font-face {
  font-family: "Typewriter";
  src: url(/static/typewriter.ttf);
}

@font-face {
  font-family: "OPTIVagRound";
  src: url(/static/OPTIVagRound-Bold.otf);
}

body {
  color: $text;
  height: 100%;
  line-height: 1.6;
  background: url(/static/background.png) repeat;
  background-size: 120px;
  font-family: "OPTIVagRound";
  // stop fucking with my font sizes, apple
  -webkit-text-size-adjust: 100%;
}

.contents {
  margin: 10px;
  margin-top: 100px;
  width: 550px;
  background-color: $lightblue;
  padding: 50px;
  height: 100%;
  border: 5px solid $gray;
}

footer {
  font-weight: lighter;
  font-size: 0.8em;
}

:focus {
  outline: $gray solid 2px;
}

:not(:focus-visible) {
  outline: none;
}

/*
 * Always have a container-outer and (at least one) container-inner.
 * Having more than one container-inner specifies where line breaks are
 * preferred.
 *
 * By default, between container-inners rather than inside one. If the
 * container-outer is also of class wrap-inner, the outer container will never
 * wrap, and so the contents of container-inners will wrap first.
 */
.container-outer {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  flex-wrap: wrap;
  // ideally this shouldn't turn off outer wrapping altogether, just prefer inner wrapping
  &.wrap-inner {
    flex-wrap: nowrap;
  }
  > .container-inner {
    display: flex;
    justify-content: space-around;
    align-items: flex-end;
    flex-grow: 1;
    flex-wrap: wrap;
  }
}

.box {
  background-color: $brown;
  display: inline-block;
  padding: 2px 25px;
  margin: 2px;
  border: inset;
  border-color: $pink;
  border-width: 5px;
  border-style: outset;

  // a& is not supported yet
  @at-root a#{&} {
    @include plain-link;
    &:hover, &:focus {
      outline: none;
      border-style: inset;
    }
    // rather than set :focus-visible, we unset :not(focus-visible). This way
    // browsers that don't support :focus-visible will still do it on :focus
    &:not(:hover):not(:focus-visible) {
      outline: none;
      border-style: outset;
    }
  }
}

hr {
  border-color: $text;
}

h1 {
  font-family: Emulogic;
}

h2 {
  font-size: 1.2em;
}

.download {
  text-align: center;
  margin: 3px;

  &:hover,&:focus {
    outline: none;
    > img.logo {
      filter: brightness(130%);
    }
  }

  &:not(:hover):not(:focus-visible) {
    outline: none;
    > img.logo {
      filter: none;
    }
  }

  > img.logo {
    width: 100px;
    margin: 0 auto;
  }

  // a& is not supported yet
  @at-root a#{&} {
    @include plain-link;
  }
}

img.inline {
  width: 0.8em;
  display: inline;
  vertical-align: baseline;
  margin: 0 2px;
}

.stretch {
  object-fit: fill;
}

// unless they're .inline
a > img {
  display: block;
}

figcaption {
  font-weight: lighter;
  font-size: 0.6em;
}

.huh {

  padding: 3px;

  .q {
    cursor: pointer;
    font-size: 1.2em;

    // triangle pointer
    // ideally, this would be input::after, but firefox doesn't like that
    &::before {
      border: solid $text;
      border-width: 0 3px 3px 0;
      display: inline-block;
      padding: 0.15em;
      margin: 2px;
      content: '';
      // when unselected, triangle points to the right
      transform: rotate(-45deg);
      -webkit-transform: rotate(-45deg);
    }
  }
  // answer is hidden until the question is clicked
  .a {
    margin-left: 1em; // inset past the question
    margin-top: -10px; // closer to the question
    // accessible alternative to
    // display: none;
    // visibility: hidden;
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  input {
    // accessible alternative to
    // display: none;
    position: absolute;
    clip: rect(0 0 0 0);
    overflow: hidden;

    // focus is on the checkbox, but should visually show on the question
    &:focus ~ .q {
      outline: $gray solid 2px;
    }
    &:not(:focus-visible) ~ .q {
      outline: none;
    }

    // when selected xor linked to with #id in the URL, triangle points down and
    // text is visible. XOR is so you can still toggle it off when linked to
    // @each is for backward compatiblity. can be just `:is` in the future
    @each $is in is, matches, -webkit-any, -moz-any {
      &:#{$is}(:checked:not(:target),:target:not(:checked)) {
        ~ .q::before {
          transform: rotate(45deg);
          -webkit-transform: rotate(45deg);
          -moz-transform: rotate(45deg);
        }

        ~ div.a {
          // accessible alternative to
          // display: block;
          // visibility: visible;
          position: relative;
          top: 0px;
          left: 0px;
        }
      }
    }
  }
}

// small screens
@media only screen and (max-width: 650px) {
  body {
    background-size: 32px;
  }
  .contents {
    margin-top: 10px;
    width: 100%;
    padding: 10px;
    border-width: 2px;
  }
  .box {
    padding: 2px 10px;
    border-width: 4px;
  }
  h1 {
    margin: 10px;
  }
  figure {
    width: 100%;
    margin: 0;
  }
}
